- name: Setp shipping Server
  hosts: shipping
  become: true
  tasks:
  - name: install maven
    ansible.builtin.dnf:
      name: maven
      state: "present"
  - name: create /app directory
    ansible.builtin.file:
      path: /app
      state: directory
  - name: create roboshop system_user
    ansible.builtin.user:
      system: yes
      shell: /sbin/nologin
      home: /app
      comment: "Roboshop system_user"
      name: roboshop
  - name: Download shipping code
    ansible.builtin.get_url:
      url: https://roboshop-artifacts.s3.amazonaws.com/shipping-v3.zip
      dest: /tmp/shipping.zip
  - name: Extract shipping code into /app
    ansible.builtin.unarchive:
      remote_src: true
      src: /tmp/shipping.zip
      dest: /app
  - name: install maven dependencies
    ansible.builtin.command: mvn clean package
    args:
      chdir: /app
  - name: rename jar file
    ansible.builtin.command: mv target/shipping-1.0.jar shipping.jar
    args:
      chdir: /app
  - name: copy shipping service
    ansible.builtin.copy:
      src: shipping.service
      dest: /etc/systemd/system/shipping.service
  - name: daemon reload the shipping service
    ansible.builtin.systemd_service:
      daemon_reload: true
  - name: enable and restart the shipping service
    ansible.builtin.service:
      name: shipping.service
      enabled: true
      state: restarted
  - name: install mysql-client
    ansible.builtin.dnf:
      name: mysql
      state: "present"
  - name: connect mysql database through only app user
    community.mysql.mysql_info:
      login_user: shipping
      login_password: Roboshop@1
      login_host: mysql.johndaws.shop
      login_db: cities    # this is schema for mysql database